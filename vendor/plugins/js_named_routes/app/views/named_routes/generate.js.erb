<% if use_scope? %>
var <%= scope %> = {
<% end -%>

<%= function_header("get_path", "segments, options, overrides") %>
  var extras = null;

  for (var property in overrides) {
    if (options[property] != null) {
      options[property] = overrides[property];
    }
    else {
      extras = extras ? extras : {};
      extras[property] = overrides[property]
    }
  }

  for (var prop in options) {
    // perform replace for optional props (e.g. 'format=json'):
    //  "/avatar/new(.:format)?" ==> "/avatar/new.json"
    segments = segments.replace(new RegExp("\\(([^:]*):" + prop + '\\)\\?'),(options[prop] ? '$1' : '') + options[prop])

    // perform standard replace for required props (e.g. 'id=1'):
    //  "/avatar/:id/edit" ==> "/avatar/1/edit"
    segments = segments.replace(":"+prop, options[prop]);
  }

  var query="";
  if (extras) {
    query += "?"
    for (var extra in extras) {
      query += extra + "=" + extras[extra] + "&";
    }
    query = query.substring(0, query.length-1);
  }

  var path = segments;
  while (path[path.length - 1] == "/") {
    path = path.substring(0, path.length - 1);
  }
  return path + query;
}<%= end_function %>

<%= function_header("get_url", "segments, options, overrides") %>
  return <%= scoped %><%= host %> + <%= scoped %>get_path(segments, options, overrides);
}<%= end_function %>

<% ActionController::Routing::Routes.named_routes.each do |name, route| -%>

<%= function_header("#{name}_url", "overrides") %> return <%= scoped %><%= host %> + <%= scoped %><%= name %>_path(overrides) }<%= end_function %>

<%= function_header("#{name}_path", "overrides") %>
  var options = {<%= route.segment_keys.collect{|key| "#{key}: '#{route.defaults[key]}'"}.join(', ').html_safe -%>};
  return <%= scoped %>get_path("<%= route.path %>?", options, overrides);
}<%= end_function %>

<% end -%>

<% if use_scope? %>
host: <%= "#{request.protocol}#{request.host_with_port}".inspect.html_safe %>
};
<% else -%>
var js_named_routes_server_host = <%= "#{request.protocol}#{request.host_with_port}".inspect.html_safe %>;
<% end -%>
